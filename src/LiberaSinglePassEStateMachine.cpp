/*----- PROTECTED REGION ID(LiberaSinglePassEStateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        LiberaSinglePassEStateMachine.cpp
//
// description : C++ source for the �name� and its alowed
//               methods for commands and attributes
//
// project :     Libera Brillance Single Pass E.
//
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// SVN only:
// $HeadURL:  $
//
// CVS only:
// $Source:  $
// $Log:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================



#include <LiberaSinglePassE.h>
#include <LiberaSinglePassEClass.h>

/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::LiberaSinglePassEStateMachine.cpp

//================================================================
//  States   |  Description
//================================================================
//  ON       |  The Libera box is up and running
//  UNKNOWN  |  No possible communication with the Libera box
//  FAULT    |  The Libera box is in Fault


namespace LiberaSinglePassE_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_BufferSize_allowed()
 *	Description : Execution allowed for BufferSize attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_BufferSize_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for BufferSize attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::BufferSizeStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::BufferSizeStateAllowed_WRITE

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::UNKNOWN)
		{
		/*----- PROTECTED REGION ID(LiberaSinglePassE::BufferSizeStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::BufferSizeStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_AttenuationLevel_allowed()
 *	Description : Execution allowed for AttenuationLevel attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_AttenuationLevel_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for AttenuationLevel attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::AttenuationLevelStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::AttenuationLevelStateAllowed_WRITE

	//	Not any excluded states for AttenuationLevel attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::AttenuationLevelStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::AttenuationLevelStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_TriggerCounter_allowed()
 *	Description : Execution allowed for TriggerCounter attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_TriggerCounter_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::UNKNOWN)
		{
		/*----- PROTECTED REGION ID(LiberaSinglePassE::TriggerCounterStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::TriggerCounterStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Fan1Speed_allowed()
 *	Description : Execution allowed for Fan1Speed attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Fan1Speed_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Fan1Speed attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Fan1SpeedStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Fan1SpeedStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Fan2Speed_allowed()
 *	Description : Execution allowed for Fan2Speed attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Fan2Speed_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::UNKNOWN)
		{
		/*----- PROTECTED REGION ID(LiberaSinglePassE::Fan2SpeedStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Fan2SpeedStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Temp1_allowed()
 *	Description : Execution allowed for Temp1 attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Temp1_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::UNKNOWN)
		{
		/*----- PROTECTED REGION ID(LiberaSinglePassE::Temp1StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Temp1StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Temp2_allowed()
 *	Description : Execution allowed for Temp2 attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Temp2_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::UNKNOWN)
		{
		/*----- PROTECTED REGION ID(LiberaSinglePassE::Temp2StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Temp2StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Temp3_allowed()
 *	Description : Execution allowed for Temp3 attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Temp3_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::UNKNOWN)
		{
		/*----- PROTECTED REGION ID(LiberaSinglePassE::Temp3StateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Temp3StateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Calibration_ka_allowed()
 *	Description : Execution allowed for Calibration_ka attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Calibration_ka_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Calibration_ka attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Calibration_kaStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Calibration_kaStateAllowed_WRITE

	//	Not any excluded states for Calibration_ka attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Calibration_kaStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Calibration_kaStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Calibration_kb_allowed()
 *	Description : Execution allowed for Calibration_kb attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Calibration_kb_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Calibration_kb attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Calibration_kbStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Calibration_kbStateAllowed_WRITE

	//	Not any excluded states for Calibration_kb attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Calibration_kbStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Calibration_kbStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Calibration_kc_allowed()
 *	Description : Execution allowed for Calibration_kc attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Calibration_kc_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Calibration_kc attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Calibration_kcStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Calibration_kcStateAllowed_WRITE

	//	Not any excluded states for Calibration_kc attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Calibration_kcStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Calibration_kcStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Calibration_kd_allowed()
 *	Description : Execution allowed for Calibration_kd attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Calibration_kd_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Calibration_kd attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Calibration_kdStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Calibration_kdStateAllowed_WRITE

	//	Not any excluded states for Calibration_kd attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Calibration_kdStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Calibration_kdStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Linear_x_k_allowed()
 *	Description : Execution allowed for Linear_x_k attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Linear_x_k_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Linear_x_k attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_x_kStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_x_kStateAllowed_WRITE

	//	Not any excluded states for Linear_x_k attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_x_kStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_x_kStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Linear_x_offs_allowed()
 *	Description : Execution allowed for Linear_x_offs attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Linear_x_offs_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Linear_x_offs attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_x_offsStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_x_offsStateAllowed_WRITE

	//	Not any excluded states for Linear_x_offs attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_x_offsStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_x_offsStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Linear_y_k_allowed()
 *	Description : Execution allowed for Linear_y_k attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Linear_y_k_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Linear_y_k attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_y_kStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_y_kStateAllowed_WRITE

	//	Not any excluded states for Linear_y_k attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_y_kStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_y_kStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Linear_y_offs_allowed()
 *	Description : Execution allowed for Linear_y_offs attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Linear_y_offs_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Linear_y_offs attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_y_offsStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_y_offsStateAllowed_WRITE

	//	Not any excluded states for Linear_y_offs attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_y_offsStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_y_offsStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Linear_q_k_allowed()
 *	Description : Execution allowed for Linear_q_k attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Linear_q_k_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Linear_q_k attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_q_kStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_q_kStateAllowed_WRITE

	//	Not any excluded states for Linear_q_k attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_q_kStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_q_kStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Linear_q_offs_allowed()
 *	Description : Execution allowed for Linear_q_offs attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Linear_q_offs_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Linear_q_offs attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_q_offsStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_q_offsStateAllowed_WRITE

	//	Not any excluded states for Linear_q_offs attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_q_offsStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_q_offsStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Linear_sum_k_allowed()
 *	Description : Execution allowed for Linear_sum_k attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Linear_sum_k_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Linear_sum_k attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_sum_kStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_sum_kStateAllowed_WRITE

	//	Not any excluded states for Linear_sum_k attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_sum_kStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_sum_kStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Linear_sum_offs_allowed()
 *	Description : Execution allowed for Linear_sum_offs attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Linear_sum_offs_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Linear_sum_offs attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_sum_offsStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_sum_offsStateAllowed_WRITE

	//	Not any excluded states for Linear_sum_offs attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Linear_sum_offsStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Linear_sum_offsStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Signal_expansion_allowed()
 *	Description : Execution allowed for Signal_expansion attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Signal_expansion_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Signal_expansion attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Signal_expansionStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Signal_expansionStateAllowed_WRITE

	//	Not any excluded states for Signal_expansion attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Signal_expansionStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Signal_expansionStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Interlock_enabled_allowed()
 *	Description : Execution allowed for Interlock_enabled attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Interlock_enabled_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Interlock_enabled attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Interlock_enabledStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Interlock_enabledStateAllowed_WRITE

	//	Not any excluded states for Interlock_enabled attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Interlock_enabledStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Interlock_enabledStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Limit_min_x_allowed()
 *	Description : Execution allowed for Limit_min_x attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Limit_min_x_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Limit_min_x attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Limit_min_xStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Limit_min_xStateAllowed_WRITE

	//	Not any excluded states for Limit_min_x attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Limit_min_xStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Limit_min_xStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Limit_min_y_allowed()
 *	Description : Execution allowed for Limit_min_y attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Limit_min_y_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Limit_min_y attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Limit_min_yStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Limit_min_yStateAllowed_WRITE

	//	Not any excluded states for Limit_min_y attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Limit_min_yStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Limit_min_yStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Limit_max_x_allowed()
 *	Description : Execution allowed for Limit_max_x attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Limit_max_x_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Limit_max_x attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Limit_max_xStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Limit_max_xStateAllowed_WRITE

	//	Not any excluded states for Limit_max_x attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Limit_max_xStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Limit_max_xStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Limit_max_y_allowed()
 *	Description : Execution allowed for Limit_max_y attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Limit_max_y_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Limit_max_y attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Limit_max_yStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Limit_max_yStateAllowed_WRITE

	//	Not any excluded states for Limit_max_y attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Limit_max_yStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Limit_max_yStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Overflow_threshold_allowed()
 *	Description : Execution allowed for Overflow_threshold attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Overflow_threshold_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Overflow_threshold attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Overflow_thresholdStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Overflow_thresholdStateAllowed_WRITE

	//	Not any excluded states for Overflow_threshold attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Overflow_thresholdStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Overflow_thresholdStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Interlock_status_allowed()
 *	Description : Execution allowed for Interlock_status attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Interlock_status_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Interlock_status attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Interlock_statusStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Interlock_statusStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Status_x_allowed()
 *	Description : Execution allowed for Status_x attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Status_x_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Status_x attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Status_xStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Status_xStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Status_y_allowed()
 *	Description : Execution allowed for Status_y attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Status_y_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Status_y attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Status_yStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Status_yStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Status_adc_overflow_allowed()
 *	Description : Execution allowed for Status_adc_overflow attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Status_adc_overflow_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Status_adc_overflow attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::Status_adc_overflowStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::Status_adc_overflowStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_XPosition_allowed()
 *	Description : Execution allowed for XPosition attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_XPosition_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for XPosition attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::XPositionStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::XPositionStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_YPosition_allowed()
 *	Description : Execution allowed for YPosition attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_YPosition_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for YPosition attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::YPositionStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::YPositionStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Sum_allowed()
 *	Description : Execution allowed for Sum attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Sum_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Sum attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::SumStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::SumStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Quad_allowed()
 *	Description : Execution allowed for Quad attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Quad_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Quad attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::QuadStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::QuadStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_ADCChannelA_allowed()
 *	Description : Execution allowed for ADCChannelA attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_ADCChannelA_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for ADCChannelA attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::ADCChannelAStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::ADCChannelAStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_ADCChannelB_allowed()
 *	Description : Execution allowed for ADCChannelB attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_ADCChannelB_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for ADCChannelB attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::ADCChannelBStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::ADCChannelBStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_ADCChannelC_allowed()
 *	Description : Execution allowed for ADCChannelC attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_ADCChannelC_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for ADCChannelC attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::ADCChannelCStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::ADCChannelCStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_ADCChannelD_allowed()
 *	Description : Execution allowed for ADCChannelD attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_ADCChannelD_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for ADCChannelD attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::ADCChannelDStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::ADCChannelDStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_AT_allowed()
 *	Description : Execution allowed for AT attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_AT_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for AT attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::ATStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::ATStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_BT_allowed()
 *	Description : Execution allowed for BT attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_BT_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for BT attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::BTStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::BTStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_CT_allowed()
 *	Description : Execution allowed for CT attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_CT_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for CT attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::CTStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::CTStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_DT_allowed()
 *	Description : Execution allowed for DT attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_DT_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for DT attribute in read access.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::DTStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::DTStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Current_allowed()
 *	Description : Execution allowed for Current attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Current_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::UNKNOWN)
		{
		/*----- PROTECTED REGION ID(LiberaSinglePassE::CurrentStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::CurrentStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_SumT_allowed()
 *	Description : Execution allowed for SumT attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_SumT_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::UNKNOWN)
		{
		/*----- PROTECTED REGION ID(LiberaSinglePassE::SumTStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::SumTStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_Reset_allowed()
 *	Description : Execution allowed for Reset attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_Reset_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::ON ||
		get_state()==Tango::UNKNOWN)
	{
	/*----- PROTECTED REGION ID(LiberaSinglePassE::ResetStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::ResetStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_ResetTrigger_allowed()
 *	Description : Execution allowed for ResetTrigger attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_ResetTrigger_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::UNKNOWN ||
		get_state()==Tango::FAULT)
	{
	/*----- PROTECTED REGION ID(LiberaSinglePassE::ResetTriggerStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::ResetTriggerStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_ResetInterlockStatus_allowed()
 *	Description : Execution allowed for ResetInterlockStatus attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_ResetInterlockStatus_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for ResetInterlockStatus command.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::ResetInterlockStatusStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::ResetInterlockStatusStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaSinglePassE::is_MagicCommand_allowed()
 *	Description : Execution allowed for MagicCommand attribute
 */
//--------------------------------------------------------
bool LiberaSinglePassE::is_MagicCommand_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for MagicCommand command.
	/*----- PROTECTED REGION ID(LiberaSinglePassE::MagicCommandStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaSinglePassE::MagicCommandStateAllowed
	return true;
}

}	//	End of namespace
